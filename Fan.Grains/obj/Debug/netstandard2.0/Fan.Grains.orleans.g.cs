// <auto-generated />
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof (OrleansGeneratedCode.OrleansCodeGend01d589df8FeaturePopulator))]
[assembly: global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute(@"Fan.Grains, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace OrleansGeneratedCodeBCDAC393
{
    using global::Orleans;
    using global::System.Reflection;

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof (global::Fan.IGrains.Account.States.AsyncState<>))]
    internal sealed class OrleansCodeGenFan_IGrains_Account_States_AsyncStateSerializer<T>
    {
        public OrleansCodeGenFan_IGrains_Account_States_AsyncStateSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public global::System.Object DeepCopier(global::System.Object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::Fan.IGrains.Account.States.AsyncState<T> input = ((global::Fan.IGrains.Account.States.AsyncState<T>)original);
            global::Fan.IGrains.Account.States.AsyncState<T> result = new global::Fan.IGrains.Account.States.AsyncState<T>();
            context.RecordCopy(original, result);
            result.DoingVersion = input.DoingVersion;
            result.StateId = (T)context.DeepCopyInner(input.StateId);
            result.Version = input.Version;
            result.VersionTime = input.VersionTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(global::System.Object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::Fan.IGrains.Account.States.AsyncState<T> input = (global::Fan.IGrains.Account.States.AsyncState<T>)untypedInput;
            context.SerializeInner(input.DoingVersion, typeof (global::System.Int64));
            context.SerializeInner(input.StateId, typeof (T));
            context.SerializeInner(input.Version, typeof (global::System.Int64));
            context.SerializeInner(input.VersionTime, typeof (global::System.DateTime));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public global::System.Object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::Fan.IGrains.Account.States.AsyncState<T> result = new global::Fan.IGrains.Account.States.AsyncState<T>();
            context.RecordObject(result);
            result.DoingVersion = (global::System.Int64)context.DeserializeInner(typeof (global::System.Int64));
            result.StateId = (T)context.DeserializeInner(typeof (T));
            result.Version = (global::System.Int64)context.DeserializeInner(typeof (global::System.Int64));
            result.VersionTime = (global::System.DateTime)context.DeserializeInner(typeof (global::System.DateTime));
            return (global::Fan.IGrains.Account.States.AsyncState<T>)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof (global::Fan.IGrains.Account.States.AccountState))]
    internal sealed class OrleansCodeGenFan_IGrains_Account_States_AccountStateSerializer
    {
        public OrleansCodeGenFan_IGrains_Account_States_AccountStateSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public global::System.Object DeepCopier(global::System.Object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::Fan.IGrains.Account.States.AccountState input = ((global::Fan.IGrains.Account.States.AccountState)original);
            global::Fan.IGrains.Account.States.AccountState result = new global::Fan.IGrains.Account.States.AccountState();
            context.RecordCopy(original, result);
            result.Balance = input.Balance;
            result.DoingVersion = input.DoingVersion;
            result.StateId = input.StateId;
            result.Version = input.Version;
            result.VersionTime = input.VersionTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(global::System.Object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::Fan.IGrains.Account.States.AccountState input = (global::Fan.IGrains.Account.States.AccountState)untypedInput;
            context.SerializeInner(input.Balance, typeof (global::System.Decimal));
            context.SerializeInner(input.DoingVersion, typeof (global::System.Int64));
            context.SerializeInner(input.StateId, typeof (global::System.String));
            context.SerializeInner(input.Version, typeof (global::System.Int64));
            context.SerializeInner(input.VersionTime, typeof (global::System.DateTime));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public global::System.Object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::Fan.IGrains.Account.States.AccountState result = new global::Fan.IGrains.Account.States.AccountState();
            context.RecordObject(result);
            result.Balance = (global::System.Decimal)context.DeserializeInner(typeof (global::System.Decimal));
            result.DoingVersion = (global::System.Int64)context.DeserializeInner(typeof (global::System.Int64));
            result.StateId = (global::System.String)context.DeserializeInner(typeof (global::System.String));
            result.Version = (global::System.Int64)context.DeserializeInner(typeof (global::System.Int64));
            result.VersionTime = (global::System.DateTime)context.DeserializeInner(typeof (global::System.DateTime));
            return (global::Fan.IGrains.Account.States.AccountState)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof (global::Fan.IGrains.MessageInfo))]
    internal sealed class OrleansCodeGenFan_IGrains_MessageInfoSerializer
    {
        public OrleansCodeGenFan_IGrains_MessageInfoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public global::System.Object DeepCopier(global::System.Object original, global::Orleans.Serialization.ICopyContext context)
        {
            // No deep copy required since Fan.IGrains.MessageInfo is marked with the [Immutable] attribute.
            return original;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(global::System.Object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::Fan.IGrains.MessageInfo input = (global::Fan.IGrains.MessageInfo)untypedInput;
            context.SerializeInner(input.BinaryBytes, typeof (global::System.Byte[]));
            context.SerializeInner(input.TypeCode, typeof (global::System.String));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public global::System.Object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::Fan.IGrains.MessageInfo result = new global::Fan.IGrains.MessageInfo();
            context.RecordObject(result);
            result.BinaryBytes = (global::System.Byte[])context.DeserializeInner(typeof (global::System.Byte[]));
            result.TypeCode = (global::System.String)context.DeserializeInner(typeof (global::System.String));
            return (global::Fan.IGrains.MessageInfo)result;
        }
    }
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
    internal sealed class OrleansCodeGend01d589df8FeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Fan.Grains.Account.AccountDb)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Fan.Grains.Account.AccountRep)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Fan.Grain.AccountFlow)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::Fan.Grain.Account.Account)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddSerializerType(typeof (global::Fan.IGrains.Account.States.AsyncState<>), typeof (OrleansGeneratedCodeBCDAC393.OrleansCodeGenFan_IGrains_Account_States_AsyncStateSerializer<>));
            feature.AddSerializerType(typeof (global::Fan.IGrains.Account.States.AccountState), typeof (OrleansGeneratedCodeBCDAC393.OrleansCodeGenFan_IGrains_Account_States_AccountStateSerializer));
            feature.AddSerializerType(typeof (global::Fan.IGrains.MessageInfo), typeof (OrleansGeneratedCodeBCDAC393.OrleansCodeGenFan_IGrains_MessageInfoSerializer));
            feature.AddKnownType(@"Fan.Grains.DbGrain`2,Fan.Grains", @"Fan.Grains.DbGrain`2'2");
            feature.AddKnownType(@"Ray.MongoDb.MongoAsyncGrain`3,Ray.MongoDB", @"Ray.MongoDb.MongoAsyncGrain`3'3");
            feature.AddKnownType(@"Ray.MongoDb.IMongoGrain,Ray.MongoDB", @"Ray.MongoDb.IMongoGrain");
            feature.AddKnownType(@"Fan.Grains.Account.AccountDb,Fan.Grains", @"Fan.Grains.Account.AccountDb");
            feature.AddKnownType(@"Fan.Grains.Account.AccountEventHandle,Fan.Grains", @"Fan.Grains.Account.AccountEventHandle");
            feature.AddKnownType(@"Fan.Grains.Account.AccountRep,Fan.Grains", @"Fan.Grains.Account.AccountRep");
            feature.AddKnownType(@"Ray.MongoDb.MongoRepGrain`3,Ray.MongoDB", @"Ray.MongoDb.MongoRepGrain`3'3");
            feature.AddKnownType(@"Fan.Grain.AccountFlow,Fan.Grains", @"Fan.Grain.AccountFlow");
            feature.AddKnownType(@"Fan.Grain.Account.Account,Fan.Grains", @"Fan.Grain.Account.Account");
            feature.AddKnownType(@"Ray.MongoDb.MongoGrain`3,Ray.MongoDB", @"Ray.MongoDb.MongoGrain`3'3");
            feature.AddKnownType(@"Ray.MongoDb.CollectionInfo,Ray.MongoDB", @"Ray.MongoDb.CollectionInfo");
            feature.AddKnownType(@"Ray.MongoDb.Extensions,Ray.MongoDB", @"Ray.MongoDb.Extensions");
            feature.AddKnownType(@"Ray.MongoDb.MongoConfig,Ray.MongoDB", @"Ray.MongoDb.MongoConfig");
            feature.AddKnownType(@"Ray.MongoDb.MongoEvent`1,Ray.MongoDB", @"Ray.MongoDb.MongoEvent`1'1");
            feature.AddKnownType(@"Ray.MongoDb.MongoEventStorage`1,Ray.MongoDB", @"Ray.MongoDb.MongoEventStorage`1'1");
            feature.AddKnownType(@"Ray.MongoDb.MongoGrainConfig,Ray.MongoDB", @"Ray.MongoDb.MongoGrainConfig");
            feature.AddKnownType(@"Ray.MongoDb.MongoState`1,Ray.MongoDB", @"Ray.MongoDb.MongoState`1'1");
            feature.AddKnownType(@"Ray.MongoDb.MongoStateStorage`2,Ray.MongoDB", @"Ray.MongoDb.MongoStateStorage`2'2");
            feature.AddKnownType(@"Ray.MongoDb.IMongoStorage,Ray.MongoDB", @"Ray.MongoDb.IMongoStorage");
            feature.AddKnownType(@"Ray.MongoDb.MongoStorage,Ray.MongoDB", @"Ray.MongoDb.MongoStorage");
            feature.AddKnownType(@"Ray.MongoDb.MongoStorageContainer,Ray.MongoDB", @"Ray.MongoDb.MongoStorageContainer");
            feature.AddKnownType(@"Ray.RabbitMQ.Extensions,Ray.RabbitMQ", @"Ray.RabbitMQ.Extensions");
            feature.AddKnownType(@"Ray.RabbitMQ.IRabbitMQClient,Ray.RabbitMQ", @"Ray.RabbitMQ.IRabbitMQClient");
            feature.AddKnownType(@"Ray.RabbitMQ.MQServiceContainer`1,Ray.RabbitMQ", @"Ray.RabbitMQ.MQServiceContainer`1'1");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitConfig,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitConfig");
            feature.AddKnownType(@"Ray.RabbitMQ.ConnectionWrapper,Ray.RabbitMQ", @"Ray.RabbitMQ.ConnectionWrapper");
            feature.AddKnownType(@"Ray.RabbitMQ.ModelWrapper,Ray.RabbitMQ", @"Ray.RabbitMQ.ModelWrapper");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitMQClient,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitMQClient");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitMQService`1,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitMQService`1'1");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitPubAttribute,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitPubAttribute");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitPubAttrExtensions,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitPubAttrExtensions");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitSubAttribute,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitSubAttribute");
            feature.AddKnownType(@"Ray.RabbitMQ.QueueInfo,Ray.RabbitMQ", @"Ray.RabbitMQ.QueueInfo");
            feature.AddKnownType(@"Ray.RabbitMQ.RabbitSubManager,Ray.RabbitMQ", @"Ray.RabbitMQ.RabbitSubManager");
            feature.AddKnownType(@"Ray.RabbitMQ.ConsumerInfo,Ray.RabbitMQ", @"Ray.RabbitMQ.ConsumerInfo");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
