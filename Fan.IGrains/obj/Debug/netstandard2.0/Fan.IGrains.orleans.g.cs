// <auto-generated />
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof (OrleansGeneratedCode.OrleansCodeGen6e29db051aFeaturePopulator))]
[assembly: global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute(@"Fan.IGrains, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace Fan.IGrains.Account.Actors
{
    using global::Orleans;
    using global::System.Reflection;

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccount))]
    internal class OrleansCodeGenAccountReference : global::Orleans.Runtime.GrainReference, global::Fan.IGrains.Account.Actors.IAccount
    {
        protected OrleansCodeGenAccountReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenAccountReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenAccountReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return -1101719781;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Fan.IGrains.Account.Actors.IAccount";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == -1101719781 || interfaceId == -1277021679;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case -1101719781:
                    switch (methodId)
                    {
                        case 698066810:
                            return @"GetBalance";
                        case 1246418569:
                            return @"AddAmount";
                        case 1994318446:
                            return @"Transfer";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1101719781 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task<global::System.Decimal> GetBalance()
        {
            return base.InvokeMethodAsync<global::System.Decimal>(698066810, null, options: global::Orleans.CodeGeneration.InvokeMethodOptions.AlwaysInterleave);
        }

        public global::System.Threading.Tasks.Task AddAmount(global::System.Decimal amount, global::System.String uniqueId)
        {
            return base.InvokeMethodAsync<global::System.Object>(1246418569, new global::System.Object[]{amount, uniqueId});
        }

        public global::System.Threading.Tasks.Task Transfer(global::System.String toAccountId, global::System.Decimal amount)
        {
            return base.InvokeMethodAsync<global::System.Object>(1994318446, new global::System.Object[]{toAccountId, amount});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccount), -1101719781), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenAccountMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case -1101719781:
                    switch (methodId)
                    {
                        case 698066810:
                            return await ((global::Fan.IGrains.Account.Actors.IAccount)grain).GetBalance();
                        case 1246418569:
                            await ((global::Fan.IGrains.Account.Actors.IAccount)grain).AddAmount((global::System.Decimal)arguments[0], (global::System.String)arguments[1]);
                            return null;
                        case 1994318446:
                            await ((global::Fan.IGrains.Account.Actors.IAccount)grain).Transfer((global::System.String)arguments[0], (global::System.Decimal)arguments[1]);
                            return null;
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1101719781 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return -1101719781;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccountDb))]
    internal class OrleansCodeGenAccountDbReference : global::Orleans.Runtime.GrainReference, global::Fan.IGrains.Account.Actors.IAccountDb
    {
        protected OrleansCodeGenAccountDbReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenAccountDbReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenAccountDbReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return -717526170;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Fan.IGrains.Account.Actors.IAccountDb";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == -717526170 || interfaceId == -1277021679;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case -717526170:
                    switch (methodId)
                    {
                        case 238301750:
                            return @"Tell";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -717526170 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task Tell(global::System.Byte[] bytes)
        {
            return base.InvokeMethodAsync<global::System.Object>(238301750, new global::System.Object[]{bytes});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccountDb), -717526170), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenAccountDbMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case -717526170:
                    switch (methodId)
                    {
                        case 238301750:
                            await ((global::Fan.IGrains.Account.Actors.IAccountDb)grain).Tell((global::System.Byte[])arguments[0]);
                            return null;
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -717526170 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return -717526170;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccountFlow))]
    internal class OrleansCodeGenAccountFlowReference : global::Orleans.Runtime.GrainReference, global::Fan.IGrains.Account.Actors.IAccountFlow
    {
        protected OrleansCodeGenAccountFlowReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenAccountFlowReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenAccountFlowReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return -1669425873;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Fan.IGrains.Account.Actors.IAccountFlow";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == -1669425873 || interfaceId == -1277021679;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case -1669425873:
                    switch (methodId)
                    {
                        case 238301750:
                            return @"Tell";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1669425873 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task Tell(global::System.Byte[] bytes)
        {
            return base.InvokeMethodAsync<global::System.Object>(238301750, new global::System.Object[]{bytes});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccountFlow), -1669425873), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenAccountFlowMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case -1669425873:
                    switch (methodId)
                    {
                        case 238301750:
                            await ((global::Fan.IGrains.Account.Actors.IAccountFlow)grain).Tell((global::System.Byte[])arguments[0]);
                            return null;
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1669425873 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return -1669425873;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccountRep))]
    internal class OrleansCodeGenAccountRepReference : global::Orleans.Runtime.GrainReference, global::Fan.IGrains.Account.Actors.IAccountRep
    {
        protected OrleansCodeGenAccountRepReference(global::Orleans.Runtime.GrainReference other): base (other)
        {
        }

        OrleansCodeGenAccountRepReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base (other, invokeMethodOptions)
        {
        }

        protected OrleansCodeGenAccountRepReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base (info, context)
        {
        }

        public override global::System.Int32 InterfaceId
        {
            get
            {
                return -607206081;
            }
        }

        public override global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }

        public override global::System.String InterfaceName
        {
            get
            {
                return @"global::Fan.IGrains.Account.Actors.IAccountRep";
            }
        }

        public override global::System.Boolean IsCompatible(global::System.Int32 interfaceId)
        {
            return interfaceId == -607206081 || interfaceId == -1277021679;
        }

        public override global::System.String GetMethodName(global::System.Int32 interfaceId, global::System.Int32 methodId)
        {
            switch (interfaceId)
            {
                case -607206081:
                    switch (methodId)
                    {
                        case 698066810:
                            return @"GetBalance";
                        case 238301750:
                            return @"Tell";
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -607206081 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Threading.Tasks.Task<global::System.Decimal> GetBalance()
        {
            return base.InvokeMethodAsync<global::System.Decimal>(698066810, null);
        }

        public global::System.Threading.Tasks.Task Tell(global::System.Byte[] bytes)
        {
            return base.InvokeMethodAsync<global::System.Object>(238301750, new global::System.Object[]{bytes});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof (global::Fan.IGrains.Account.Actors.IAccountRep), -607206081), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenAccountRepMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<global::System.Object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            global::System.Int32 interfaceId = request.InterfaceId;
            global::System.Int32 methodId = request.MethodId;
            global::System.Object[] arguments = request.Arguments;
            if (grain == null)
                throw new global::System.ArgumentNullException(@"grain");
            switch (interfaceId)
            {
                case -607206081:
                    switch (methodId)
                    {
                        case 698066810:
                            return await ((global::Fan.IGrains.Account.Actors.IAccountRep)grain).GetBalance();
                        case 238301750:
                            await ((global::Fan.IGrains.Account.Actors.IAccountRep)grain).Tell((global::System.Byte[])arguments[0]);
                            return null;
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -607206081 + @",methodId=" + methodId);
                    }

                case -1277021679:
                    switch (methodId)
                    {
                        default:
                            throw new global::System.NotImplementedException(@"interfaceId=" + -1277021679 + @",methodId=" + methodId);
                    }

                default:
                    throw new global::System.NotImplementedException(@"interfaceId=" + interfaceId);
            }
        }

        public global::System.Int32 InterfaceId
        {
            get
            {
                return -607206081;
            }
        }

        public global::System.UInt16 InterfaceVersion
        {
            get
            {
                return 1;
            }
        }
    }
}

namespace OrleansGeneratedCodeE02D7023
{
    using global::Orleans;
    using global::System.Reflection;
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
    internal sealed class OrleansCodeGen6e29db051aFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Fan.IGrains.Account.Actors.IAccount), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountReference), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountMethodInvoker), -1101719781));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Fan.IGrains.Account.Actors.IAccountDb), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountDbReference), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountDbMethodInvoker), -717526170));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Fan.IGrains.Account.Actors.IAccountFlow), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountFlowReference), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountFlowMethodInvoker), -1669425873));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof (global::Fan.IGrains.Account.Actors.IAccountRep), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountRepReference), typeof (Fan.IGrains.Account.Actors.OrleansCodeGenAccountRepMethodInvoker), -607206081));
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType(@"Fan.IGrains.MessageInfo,Fan.IGrains", @"Fan.IGrains.MessageInfo");
            feature.AddKnownType(@"Fan.IGrains.ProtobufSerializer,Fan.IGrains", @"Fan.IGrains.ProtobufSerializer");
            feature.AddKnownType(@"Fan.IGrains.Account.States.AccountState,Fan.IGrains", @"Fan.IGrains.Account.States.AccountState");
            feature.AddKnownType(@"Fan.IGrains.Account.States.AsyncState`1,Fan.IGrains", @"Fan.IGrains.Account.States.AsyncState`1'1");
            feature.AddKnownType(@"Fan.IGrains.Account.Events.AmountAddEvent,Fan.IGrains", @"Fan.IGrains.Account.Events.AmountAddEvent");
            feature.AddKnownType(@"Fan.IGrains.Account.Events.AmountTransferEvent,Fan.IGrains", @"Fan.IGrains.Account.Events.AmountTransferEvent");
            feature.AddKnownType(@"Fan.IGrains.Account.Actors.IAccount,Fan.IGrains", @"Fan.IGrains.Account.Actors.IAccount");
            feature.AddKnownType(@"Fan.IGrains.Account.Actors.IAccountDb,Fan.IGrains", @"Fan.IGrains.Account.Actors.IAccountDb");
            feature.AddKnownType(@"Fan.IGrains.Account.Actors.IAccountFlow,Fan.IGrains", @"Fan.IGrains.Account.Actors.IAccountFlow");
            feature.AddKnownType(@"Fan.IGrains.Account.Actors.IAccountRep,Fan.IGrains", @"Fan.IGrains.Account.Actors.IAccountRep");
            feature.AddKnownType(@"ProtoBuf.TimeSpanScale,protobuf-net", @"ProtoBuf.TimeSpanScale");
            feature.AddKnownType(@"ProtoBuf.BclHelpers,protobuf-net", @"ProtoBuf.BclHelpers");
            feature.AddKnownType(@"ProtoBuf.BufferExtension,protobuf-net", @"ProtoBuf.BufferExtension");
            feature.AddKnownType(@"ProtoBuf.IExtension,protobuf-net", @"ProtoBuf.IExtension");
            feature.AddKnownType(@"ProtoBuf.IExtensionResettable,protobuf-net", @"ProtoBuf.IExtensionResettable");
            feature.AddKnownType(@"ProtoBuf.BufferPool,protobuf-net", @"ProtoBuf.BufferPool");
            feature.AddKnownType(@"ProtoBuf.ProtoBeforeSerializationAttribute,protobuf-net", @"ProtoBuf.ProtoBeforeSerializationAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoAfterSerializationAttribute,protobuf-net", @"ProtoBuf.ProtoAfterSerializationAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoBeforeDeserializationAttribute,protobuf-net", @"ProtoBuf.ProtoBeforeDeserializationAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoAfterDeserializationAttribute,protobuf-net", @"ProtoBuf.ProtoAfterDeserializationAttribute");
            feature.AddKnownType(@"ProtoBuf.DataFormat,protobuf-net", @"ProtoBuf.DataFormat");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnionObject,protobuf-net", @"ProtoBuf.DiscriminatedUnionObject");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnion64,protobuf-net", @"ProtoBuf.DiscriminatedUnion64");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnion128Object,protobuf-net", @"ProtoBuf.DiscriminatedUnion128Object");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnion128,protobuf-net", @"ProtoBuf.DiscriminatedUnion128");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnion64Object,protobuf-net", @"ProtoBuf.DiscriminatedUnion64Object");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnion32,protobuf-net", @"ProtoBuf.DiscriminatedUnion32");
            feature.AddKnownType(@"ProtoBuf.DiscriminatedUnion32Object,protobuf-net", @"ProtoBuf.DiscriminatedUnion32Object");
            feature.AddKnownType(@"ProtoBuf.Extensible,protobuf-net", @"ProtoBuf.Extensible");
            feature.AddKnownType(@"ProtoBuf.IExtensible,protobuf-net", @"ProtoBuf.IExtensible");
            feature.AddKnownType(@"ProtoBuf.ExtensibleUtil,protobuf-net", @"ProtoBuf.ExtensibleUtil");
            feature.AddKnownType(@"ProtoBuf.Helpers,protobuf-net", @"ProtoBuf.Helpers");
            feature.AddKnownType(@"ProtoBuf.ProtoTypeCode,protobuf-net", @"ProtoBuf.ProtoTypeCode");
            feature.AddKnownType(@"ProtoBuf.ImplicitFields,protobuf-net", @"ProtoBuf.ImplicitFields");
            feature.AddKnownType(@"ProtoBuf.NetObjectCache,protobuf-net", @"ProtoBuf.NetObjectCache");
            feature.AddKnownType(@"ProtoBuf.PrefixStyle,protobuf-net", @"ProtoBuf.PrefixStyle");
            feature.AddKnownType(@"ProtoBuf.ProtoContractAttribute,protobuf-net", @"ProtoBuf.ProtoContractAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoConverterAttribute,protobuf-net", @"ProtoBuf.ProtoConverterAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoEnumAttribute,protobuf-net", @"ProtoBuf.ProtoEnumAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoException,protobuf-net", @"ProtoBuf.ProtoException");
            feature.AddKnownType(@"ProtoBuf.ProtoIgnoreAttribute,protobuf-net", @"ProtoBuf.ProtoIgnoreAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoPartialIgnoreAttribute,protobuf-net", @"ProtoBuf.ProtoPartialIgnoreAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoIncludeAttribute,protobuf-net", @"ProtoBuf.ProtoIncludeAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoMapAttribute,protobuf-net", @"ProtoBuf.ProtoMapAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoMemberAttribute,protobuf-net", @"ProtoBuf.ProtoMemberAttribute");
            feature.AddKnownType(@"ProtoBuf.MemberSerializationOptions,protobuf-net", @"ProtoBuf.MemberSerializationOptions");
            feature.AddKnownType(@"ProtoBuf.ProtoPartialMemberAttribute,protobuf-net", @"ProtoBuf.ProtoPartialMemberAttribute");
            feature.AddKnownType(@"ProtoBuf.ProtoReader,protobuf-net", @"ProtoBuf.ProtoReader");
            feature.AddKnownType(@"ProtoBuf.ProtoWriter,protobuf-net", @"ProtoBuf.ProtoWriter");
            feature.AddKnownType(@"ProtoBuf.SerializationContext,protobuf-net", @"ProtoBuf.SerializationContext");
            feature.AddKnownType(@"ProtoBuf.Serializer,protobuf-net", @"ProtoBuf.Serializer");
            feature.AddKnownType(@"ProtoBuf.SubItemToken,protobuf-net", @"ProtoBuf.SubItemToken");
            feature.AddKnownType(@"ProtoBuf.WireType,protobuf-net", @"ProtoBuf.WireType");
            feature.AddKnownType(@"ProtoBuf.Serializers.ArrayDecorator,protobuf-net", @"ProtoBuf.Serializers.ArrayDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.ProtoDecoratorBase,protobuf-net", @"ProtoBuf.Serializers.ProtoDecoratorBase");
            feature.AddKnownType(@"ProtoBuf.Serializers.IProtoSerializer,protobuf-net", @"ProtoBuf.Serializers.IProtoSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.BlobSerializer,protobuf-net", @"ProtoBuf.Serializers.BlobSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.BooleanSerializer,protobuf-net", @"ProtoBuf.Serializers.BooleanSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.ByteSerializer,protobuf-net", @"ProtoBuf.Serializers.ByteSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.CharSerializer,protobuf-net", @"ProtoBuf.Serializers.CharSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.UInt16Serializer,protobuf-net", @"ProtoBuf.Serializers.UInt16Serializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.CompiledSerializer,protobuf-net", @"ProtoBuf.Serializers.CompiledSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.IProtoTypeSerializer,protobuf-net", @"ProtoBuf.Serializers.IProtoTypeSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.DateTimeSerializer,protobuf-net", @"ProtoBuf.Serializers.DateTimeSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.DecimalSerializer,protobuf-net", @"ProtoBuf.Serializers.DecimalSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.DefaultValueDecorator,protobuf-net", @"ProtoBuf.Serializers.DefaultValueDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.DoubleSerializer,protobuf-net", @"ProtoBuf.Serializers.DoubleSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.EnumSerializer,protobuf-net", @"ProtoBuf.Serializers.EnumSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.FieldDecorator,protobuf-net", @"ProtoBuf.Serializers.FieldDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.GuidSerializer,protobuf-net", @"ProtoBuf.Serializers.GuidSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.ImmutableCollectionDecorator,protobuf-net", @"ProtoBuf.Serializers.ImmutableCollectionDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.ListDecorator,protobuf-net", @"ProtoBuf.Serializers.ListDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.Int16Serializer,protobuf-net", @"ProtoBuf.Serializers.Int16Serializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.Int32Serializer,protobuf-net", @"ProtoBuf.Serializers.Int32Serializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.Int64Serializer,protobuf-net", @"ProtoBuf.Serializers.Int64Serializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.ISerializerProxy,protobuf-net", @"ProtoBuf.Serializers.ISerializerProxy");
            feature.AddKnownType(@"ProtoBuf.Serializers.MapDecorator`3,protobuf-net", @"ProtoBuf.Serializers.MapDecorator`3'3");
            feature.AddKnownType(@"ProtoBuf.Serializers.MemberSpecifiedDecorator,protobuf-net", @"ProtoBuf.Serializers.MemberSpecifiedDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.NetObjectSerializer,protobuf-net", @"ProtoBuf.Serializers.NetObjectSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.NullDecorator,protobuf-net", @"ProtoBuf.Serializers.NullDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.ParseableSerializer,protobuf-net", @"ProtoBuf.Serializers.ParseableSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.PropertyDecorator,protobuf-net", @"ProtoBuf.Serializers.PropertyDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.SByteSerializer,protobuf-net", @"ProtoBuf.Serializers.SByteSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.SingleSerializer,protobuf-net", @"ProtoBuf.Serializers.SingleSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.StringSerializer,protobuf-net", @"ProtoBuf.Serializers.StringSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.SubItemSerializer,protobuf-net", @"ProtoBuf.Serializers.SubItemSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.SurrogateSerializer,protobuf-net", @"ProtoBuf.Serializers.SurrogateSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.SystemTypeSerializer,protobuf-net", @"ProtoBuf.Serializers.SystemTypeSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.TagDecorator,protobuf-net", @"ProtoBuf.Serializers.TagDecorator");
            feature.AddKnownType(@"ProtoBuf.Serializers.TimeSpanSerializer,protobuf-net", @"ProtoBuf.Serializers.TimeSpanSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.TupleSerializer,protobuf-net", @"ProtoBuf.Serializers.TupleSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.TypeSerializer,protobuf-net", @"ProtoBuf.Serializers.TypeSerializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.UInt32Serializer,protobuf-net", @"ProtoBuf.Serializers.UInt32Serializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.UInt64Serializer,protobuf-net", @"ProtoBuf.Serializers.UInt64Serializer");
            feature.AddKnownType(@"ProtoBuf.Serializers.UriDecorator,protobuf-net", @"ProtoBuf.Serializers.UriDecorator");
            feature.AddKnownType(@"ProtoBuf.Meta.AttributeMap,protobuf-net", @"ProtoBuf.Meta.AttributeMap");
            feature.AddKnownType(@"ProtoBuf.Meta.MutableList,protobuf-net", @"ProtoBuf.Meta.MutableList");
            feature.AddKnownType(@"ProtoBuf.Meta.BasicList,protobuf-net", @"ProtoBuf.Meta.BasicList");
            feature.AddKnownType(@"ProtoBuf.Meta.CallbackSet,protobuf-net", @"ProtoBuf.Meta.CallbackSet");
            feature.AddKnownType(@"ProtoBuf.Meta.MetaType,protobuf-net", @"ProtoBuf.Meta.MetaType");
            feature.AddKnownType(@"ProtoBuf.Meta.ProtoSyntax,protobuf-net", @"ProtoBuf.Meta.ProtoSyntax");
            feature.AddKnownType(@"ProtoBuf.Meta.RuntimeTypeModel,protobuf-net", @"ProtoBuf.Meta.RuntimeTypeModel");
            feature.AddKnownType(@"ProtoBuf.Meta.TypeModel,protobuf-net", @"ProtoBuf.Meta.TypeModel");
            feature.AddKnownType(@"ProtoBuf.Meta.LockContentedEventArgs,protobuf-net", @"ProtoBuf.Meta.LockContentedEventArgs");
            feature.AddKnownType(@"ProtoBuf.Meta.LockContentedEventHandler,protobuf-net", @"ProtoBuf.Meta.LockContentedEventHandler");
            feature.AddKnownType(@"ProtoBuf.Meta.SubType,protobuf-net", @"ProtoBuf.Meta.SubType");
            feature.AddKnownType(@"ProtoBuf.Meta.TypeFormatEventArgs,protobuf-net", @"ProtoBuf.Meta.TypeFormatEventArgs");
            feature.AddKnownType(@"ProtoBuf.Meta.TypeFormatEventHandler,protobuf-net", @"ProtoBuf.Meta.TypeFormatEventHandler");
            feature.AddKnownType(@"ProtoBuf.Meta.ValueMember,protobuf-net", @"ProtoBuf.Meta.ValueMember");
            feature.AddKnownType(@"ProtoBuf.Compiler.CodeLabel,protobuf-net", @"ProtoBuf.Compiler.CodeLabel");
            feature.AddKnownType(@"ProtoBuf.Compiler.CompilerContext,protobuf-net", @"ProtoBuf.Compiler.CompilerContext");
            feature.AddKnownType(@"ProtoBuf.Compiler.ProtoSerializer,protobuf-net", @"ProtoBuf.Compiler.ProtoSerializer");
            feature.AddKnownType(@"ProtoBuf.Compiler.ProtoDeserializer,protobuf-net", @"ProtoBuf.Compiler.ProtoDeserializer");
            feature.AddKnownType(@"ProtoBuf.Compiler.Local,protobuf-net", @"ProtoBuf.Compiler.Local");
            feature.AddKnownType(@"ProtoBuf.BclHelpers+NetObjectOptions,protobuf-net", @"ProtoBuf.ProtoBuf.BclHelpers.NetObjectOptions");
            feature.AddKnownType(@"ProtoBuf.Serializer+NonGeneric,protobuf-net", @"ProtoBuf.ProtoBuf.Serializer.NonGeneric");
            feature.AddKnownType(@"ProtoBuf.Serializer+GlobalOptions,protobuf-net", @"ProtoBuf.ProtoBuf.Serializer.GlobalOptions");
            feature.AddKnownType(@"ProtoBuf.Serializer+TypeResolver,protobuf-net", @"ProtoBuf.ProtoBuf.Serializer.TypeResolver");
            feature.AddKnownType(@"ProtoBuf.Serializers.EnumSerializer+EnumPair,protobuf-net", @"ProtoBuf.Serializers.ProtoBuf.Serializers.EnumSerializer.EnumPair");
            feature.AddKnownType(@"ProtoBuf.Meta.BasicList+NodeEnumerator,protobuf-net", @"ProtoBuf.Meta.ProtoBuf.Meta.BasicList.NodeEnumerator");
            feature.AddKnownType(@"ProtoBuf.Meta.BasicList+Node,protobuf-net", @"ProtoBuf.Meta.Node");
            feature.AddKnownType(@"ProtoBuf.Meta.BasicList+MatchPredicate,protobuf-net", @"ProtoBuf.Meta.MatchPredicate");
            feature.AddKnownType(@"ProtoBuf.Meta.BasicList+Group,protobuf-net", @"ProtoBuf.Meta.Group");
            feature.AddKnownType(@"ProtoBuf.Meta.MetaType+Comparer,protobuf-net", @"ProtoBuf.Meta.Comparer");
            feature.AddKnownType(@"ProtoBuf.Meta.MetaType+AttributeFamily,protobuf-net", @"ProtoBuf.Meta.AttributeFamily");
            feature.AddKnownType(@"ProtoBuf.Meta.RuntimeTypeModel+CommonImports,protobuf-net", @"ProtoBuf.Meta.CommonImports");
            feature.AddKnownType(@"ProtoBuf.Meta.RuntimeTypeModel+SerializerPair,protobuf-net", @"ProtoBuf.Meta.SerializerPair");
            feature.AddKnownType(@"ProtoBuf.Meta.RuntimeTypeModel+CompilerOptions,protobuf-net", @"ProtoBuf.Meta.ProtoBuf.Meta.RuntimeTypeModel.CompilerOptions");
            feature.AddKnownType(@"ProtoBuf.Meta.RuntimeTypeModel+Accessibility,protobuf-net", @"ProtoBuf.Meta.ProtoBuf.Meta.RuntimeTypeModel.Accessibility");
            feature.AddKnownType(@"ProtoBuf.Meta.SubType+Comparer,protobuf-net", @"ProtoBuf.Meta.Comparer");
            feature.AddKnownType(@"ProtoBuf.Meta.TypeModel+CallbackType,protobuf-net", @"ProtoBuf.Meta.CallbackType");
            feature.AddKnownType(@"ProtoBuf.Meta.ValueMember+Comparer,protobuf-net", @"ProtoBuf.Meta.Comparer");
            feature.AddKnownType(@"ProtoBuf.Compiler.CompilerContext+ILVersion,protobuf-net", @"ProtoBuf.Compiler.ProtoBuf.Compiler.CompilerContext.ILVersion");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
